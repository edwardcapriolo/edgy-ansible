
- name: Create application heirarchy
  file:
    path: '{{ item }}'
    state: directory
    mode: 0775
  with_items:
    - '{{ apache_hadoop_home }}'
    - '{{ apache_hadoop_log_dir }}'
    - '{{ apache_hadoop_tmp_dir }}'

- name: fetch and extract artifacts
  block:
    - name: check if base package exists
      stat:
        path: "{{ apache_hadoop_home }}/hadoop-{{ apache_hadoop_version }}"
      register: stat_result
    - name: download package
      get_url:
        url: "https://archive.apache.org/dist/hadoop/core/hadoop-{{ apache_hadoop_version }}/hadoop-{{ apache_hadoop_version }}-lean.tar.gz"
        dest: "{{ apache_hadoop_home }}/hadoop-{{ apache_hadoop_version }}.tar.gz"
        tmp_dest: "/tmp"
      when: stat_result.stat.exists == False
    - name: extract package
      unarchive:
        src: "{{ apache_hadoop_home }}/hadoop-{{ apache_hadoop_version }}.tar.gz"
        dest: "{{ apache_hadoop_home }}"
        copy: no
        exclude: [ "etc" ]
      when: stat_result.stat.exists == False

- name: Create etc
  file:
    path: '{{ apache_hadoop_home }}/hadoop-{{ apache_hadoop_version }}/etc/hadoop'
    state: directory
    mode: 0775

- name: template etc
  template:
    src: "{{ item.src }}"
    dest: "{{ apache_hadoop_home }}/{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: "etc/hadoop/capacity-scheduler.xml",
        dest: "hadoop-{{ apache_hadoop_version }}/etc/hadoop/capacity-scheduler.xml", mode: '0644' }
    - { src: "etc/hadoop/hadoop-env.sh",
        dest: "hadoop-{{ apache_hadoop_version }}/etc/hadoop/hadoop-env.sh", mode: '0644' }
    - { src: "etc/hadoop/core-site.xml",
        dest: "hadoop-{{ apache_hadoop_version }}/etc/hadoop/core-site.xml", mode: '0644' }
    - { src: "etc/hadoop/hdfs-site.xml",
        dest: "hadoop-{{ apache_hadoop_version }}/etc/hadoop/hdfs-site.xml", mode: '0644' }

